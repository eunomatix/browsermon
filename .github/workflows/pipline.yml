name: pipeline

on: 
    push:
        tags:
            - 'v*.*.*'
env:
  TAG_NAME: ${{ github.ref_name }}
  BRANCH_NAME: "release-${{ github.ref_name }}"

jobs:
    update_version:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          
          - name: check env variables 
            run: |
              echo "${{ env.TAG_NAME }}"
              echo "${{ env.BRANCH_NAME }}"

          - id: change_version
            run: |
              sed -i "s/__VERSION__ = .*/__VERSION__ = '${TAG_NAME}'/" src/version.py
              sed -i "s/Description=.*/Description=Browsermon Community ${TAG_NAME} by Eunomatix/" service/browsermon.service

          - name: Commit Version Change
            uses: stefanzweifel/git-auto-commit-action@v5
            with:
              commit_message: "Version ${{ env.TAG_NAME }}"
              branch: ${{ env.BRANCH_NAME }}
              create_branch: true

    build_win_x64:
        runs-on: windows-latest
        needs: [update_version]
        
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
              ref: ${{ env.BRANCH_NAME }}

          - name: Setup Python
            uses: actions/setup-python@v2
            with:
              python-version: '3.9'
              architecture: 'x64'
          
          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install pywin32
              pip install -r requirements.txt
          
          - name: Build
            run: |
              pyinstaller --hiddenimport win32timezone -F src/browsermon.py
          
          - name: Prepare Files for upload
            run: |
              mkdir artifact
              copy dist\browsermon.exe artifact\
              cp README.md artifact/
              cp browsermon.conf artifact/
              cp win_install.ps1 artifact/
              cp win_uninstall.ps1 artifact/

          - name: Create Troubleshooter exe 
            run: pyinstaller -F troubleshoot/browsermon_ts.py
          
          - name: Copy troubeshooter executeable
            run: copy dist\browsermon_ts.exe artifact\

          - name: Upload Artifact
            uses: actions/upload-artifact@v2
            with:
              name: browsermon-win-x64
              path: artifact/

    build_win_x86:
      runs-on: windows-latest
      needs: [update_version]
      
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with: 
            ref: ${{ env.BRANCH_NAME }}
        
        - name: Setup Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.9'
            architecture: 'x86'
        
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install pywin32
            pip install -r requirements.txt
        
        - name: Build
          run: |
            pyinstaller --hiddenimport win32timezone -F src/browsermon.py
        
        - name: Prepare Files for upload
          run: |
            mkdir artifact
            copy dist\browsermon.exe artifact\
            cp README.md artifact/
            cp browsermon.conf artifact/
            cp win_install.ps1 artifact/
            cp win_uninstall.ps1 artifact/

        - name: Create Troubleshooter exe 
          run: pyinstaller -F troubleshoot/browsermon_ts.py
        
        - name: Copy troubeshooter executeable
          run: copy dist\browsermon_ts.exe artifact\

        - name: Upload Artifact
          uses: actions/upload-artifact@v2
          with:
            name: browsermon-win-x86
            path: artifact/  
      
    build_linux_x64:
      runs-on: ubuntu-latest
      needs: [update_version]

      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with: 
            ref: ${{ env.BRANCH_NAME }}

        - name: Setup Python
          uses: actions/setup-python@v2
          with:
              python-version: 3.9
              architecture: x64

        - name: Install Dependencies 
          run: pip install -r requirements.txt
        
        - name: Create Executeable
          run: pyinstaller -F src/browsermon.py
        
        - name: Prepare files for upload
          run: |
            mkdir artifact
            cp dist/browsermon artifact/ 
            cp -r service/ artifact/
            cp README.md artifact/
            cp browsermon.conf artifact/
            cp linux_install.sh artifact/
            cp linux_uninstall.sh artifact/
        
        - name: Create Troubleshooter exe 
          run: pyinstaller -F troubleshoot/browsermon_ts.py
      
        - name: Copy troubeshooter executeable
          run: cp dist/browsermon_ts artifact/
        - name: Upload Artifact
          uses: actions/upload-artifact@v2
          with:
            name: browsermon-linux-x64
            path: artifact/
    create_release:
      runs-on: ubuntu-latest
      needs: [build_win_x64, build_win_x86, build_linux_x64]
      steps:
        - name: Download Artifact win-x64
          uses: actions/download-artifact@v3
          with:
            name: browsermon-win-x64
            path: browsermon-win-x64
          
        - name: Zip Dowloaded Artifact win-x64
          run: |
            cd browsermon-win-x64
            zip -r browsermon-win-x64.zip *
            cd ..
        
        - name: Download Artifact win-x86
          uses: actions/download-artifact@v3
          with:
            name: browsermon-win-x86
            path: browsermon-win-x86
          
        - name: Zip Dowloaded Artifact win-x86
          run: |
            cd browsermon-win-x86
            zip -r browsermon-win-x86.zip *
            cd ..
        
        - name: Download Artifact linux-x64
          uses: actions/download-artifact@v3
          with:
            name: browsermon-linux-x64
            path: browsermon-linux-x64
          
        - name: Zip Dowloaded Artifact linux-x64
          run: |
            cd browsermon-linux-x64
            zip -r browsermon-linux-x64.zip *
            cd ..
        - name: Create Release
          id: create_release_win_x64
          uses: softprops/action-gh-release@v1
          with: 
            files: |
              browsermon-win-x64/browsermon-win-x64.zip
              browsermon-win-x86/browsermon-win-x86.zip
              browsermon-linux-x64/browsermon-linux-x64.zip

            prerelease: false
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}