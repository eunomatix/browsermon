name: Browsermon CI/CD

on:
  push:
    tags:
      - 'v*.*.*'

env:
  TAG_NAME: ${{ github.ref_name }}
  BRANCH_NAME: "release-${{ github.ref_name }}"
  LIBRARY_NAME: "json_writer"

jobs:
  update_version:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check env variables
        run: |
          echo "${{ env.TAG_NAME }}"
          echo "${{ env.BRANCH_NAME }}"
          echo "${{ env.LIBRARY_NAME }}"

      - id: change_version
        run: |
          sed -i "s/__VERSION__ = .*/__VERSION__ = '${TAG_NAME}'/" src/version.py
          sed -i "s/Description=.*/Description=Browsermon Community ${TAG_NAME} by Eunomatix/" service/browsermon.service

      - name: Commit Version Change
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Version ${{ env.TAG_NAME }}"
          branch: ${{ env.BRANCH_NAME }}
          create_branch: true

  build_shared_library_win:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install MinGW
        run: |
          choco install mingw -y --params "/exceptions:seh /arch: x86_64"

      - name: Build shared library for Windows
        run: |
          gcc -shared -o ${LIBRARY_NAME}_win64.dll -fPIC src/json_writer.c
          gcc -m32 -shared -o ${LIBRARY_NAME}_win32.dll -fPIC src/json_writer.c

      - name: Prepare Files for upload
        run: |
          mkdir windows-libraries
          cp ${LIBRARY_NAME}_win64.dll windows-libraries/
          cp ${LIBRARY_NAME}_win32.dll windows-libraries/

      - name: Upload Windows Libraries
        uses: actions/upload-artifact@v3
        with:
          name: windows-libraries
          path: windows-libraries/

  build_shared_library_linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build dependencies for Linux
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Build shared library for Linux
        run: |
          gcc -shared -o ${LIBRARY_NAME}_linux64.so -fPIC src/json_writer.c
      - name: Prepare Files for upload
        run: |
          mkdir linux-libraries
          cp ${LIBRARY_NAME}_linux64.so linux-libraries/
      - name: Upload Linux Libraries
        uses: actions/upload-artifact@v3
        with:
          name: linux-libraries
          path: linux-libraries/

  build_win_x64:
    runs-on: windows-latest
    needs: [ build_shared_library_win ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pywin32
          pip install -r requirements.txt

      - name: Download Windows Libraries
        uses: actions/download-artifact@v3
        with:
          name: windows-libraries
          path: windows-libraries

      - name: Build
        run: |
          pyinstaller --hiddenimport win32timezone -F --add-binary "windows-libraries/json_writer_win64.dll:." src/browsermon.py

      - name: Prepare Files for upload
        run: |
          mkdir artifact
          copy dist\browsermon.exe artifact\
          cp README.md artifact/
          cp browsermon.conf artifact/
          cp win_install.ps1 artifact/
          cp win_uninstall.ps1 artifact/

      - name: Create Troubleshooter exe
        run: pyinstaller -F troubleshoot/browsermon_ts.py

      - name: Copy troubleshooter executeable
        run: copy dist\browsermon_ts.exe artifact\

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: browsermon-win-x64
          path: artifact/

  build_win_x86:
    runs-on: windows-latest
    needs: [ build_shared_library_win ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: 'x86'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pywin32
          pip install -r requirements.txt

      - name: Download Windows Libraries
        uses: actions/download-artifact@v3
        with:
          name: windows-libraries
          path: windows-libraries

      - name: Build
        run: |
          pyinstaller --hiddenimport win32timezone -F --add-binary "windows-libraries/json_writer_win32.dll:." src/browsermon.py

      - name: Prepare Files for upload
        run: |
          mkdir artifact
          copy dist\browsermon.exe artifact\
          cp README.md artifact/
          cp browsermon.conf artifact/
          cp win_install.ps1 artifact/
          cp win_uninstall.ps1 artifact/

      - name: Create Troubleshooter exe
        run: pyinstaller -F troubleshoot/browsermon_ts.py

      - name: Copy troubleshooter executeable
        run: copy dist\browsermon_ts.exe artifact\

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: browsermon-win-x86
          path: artifact/

  build_linux_x64:
    runs-on: ubuntu-latest
    needs: [ build_shared_library_linux ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: x64

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Download Linux Libraries
        uses: actions/download-artifact@v3
        with:
          name: linux-libraries
          path: linux-libraries

      - name: Create Executeable
        run: |
          pyinstaller -F --add-binary "linux-libraries/json_writer_linux64.so:." src/browsermon.py

      - name: Prepare files for upload
        run: |
          mkdir artifact
          cp dist/browsermon artifact/ 
          cp -r service/ artifact/
          cp README.md artifact/
          cp browsermon.conf artifact/
          cp linux_install.sh artifact/
          cp linux_uninstall.sh artifact/

      - name: Create Troubleshooter exe
        run: pyinstaller -F troubleshoot/browsermon_ts.py

      - name: Copy troubleshooter executeable
        run: cp dist/browsermon_ts artifact/

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: browsermon-linux-x64
          path: artifact/

  create_release:
    runs-on: ubuntu-latest
    needs: [ build_win_x64, build_win_x86, build_linux_x64 ]

    steps:
      - name: Download Artifact win-x64
        uses: actions/download-artifact@v3
        with:
          name: browsermon-win-x64
          path: browsermon-win-x64

      - name: Zip Dowloaded Artifact win-x64
        run: |
          cd browsermon-win-x64
          zip -r browsermon-win-x64.zip *
          cd ..

      - name: Download Artifact win-x86
        uses: actions/download-artifact@v3
        with:
          name: browsermon-win-x86
          path: browsermon-win-x86

      - name: Zip Dowloaded Artifact win-x86
        run: |
          cd browsermon-win-x86
          zip -r browsermon-win-x86.zip *
          cd ..

      - name: Download Artifact linux-x64
        uses: actions/download-artifact@v3
        with:
          name: browsermon-linux-x64
          path: browsermon-linux-x64

      - name: Zip Dowloaded Artifact linux-x64
        run: |
          cd browsermon-linux-x64
          zip -r browsermon-linux-x64.zip *
          cd ..

      - name: Create Release
        id: create_release_win_x64
        uses: softprops/action-gh-release@v1
        with:
          files: |
            browsermon-win-x64/browsermon-win-x64.zip
            browsermon-win-x86/browsermon-win-x86.zip
            browsermon-linux-x64/browsermon-linux-x64.zip

          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
